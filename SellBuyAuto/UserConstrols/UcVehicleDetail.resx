<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>